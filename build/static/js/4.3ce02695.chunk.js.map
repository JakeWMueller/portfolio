{"version":3,"sources":["../node_modules/ityped/src/index.js","assets/mappinappbackground.png","assets/MapPinAppDemo.mp4","components/projects/MappinApp.jsx"],"names":["init","element","properties","l","STRINGS_TO_ITERATE","i","typewrite","strings","props","loop","setTimeout","typeString","startDelay","str","index","strLen","length","intervalID","setInterval","placeholder","textContent","onStringTyped","typeSpeed","id","clearInterval","disableBackTyping","onFinished","eraseString","backDelay","substr","onStringErased","backSpeed","prop","cursorChar","showCursor","setProps","document","querySelector","cursorSpan","createElement","classList","add","insertAdjacentElement","setCursor","startTyping","MappinApp","textRef","useRef","useEffect","current","className","style","backgroundImage","mapBackground","backgroundSize","controls","muted","src","MapPinAppDemo","type","ref"],"mappings":"iHAAA,kCAMA,IA0BaA,EAAO,SAACC,EAASC,GAC5B,IAAWC,EAAGC,EAAVC,EAAI,EAEFC,EAAY,SAACC,EAASC,GACtBH,IAAMF,GACJK,EAAMC,OAAMJ,EAAI,GACtBK,YAAW,WAAQC,EAAWJ,EAAQF,GAAIG,KAAWA,EAAMI,aAGvDD,EAAa,SAACE,EAAKL,GACvB,IAAIM,EAAQ,EACVC,EAASF,EAAIG,OACXC,EAAaC,aAAY,WAE3B,GADAV,EAAMW,YAAclB,EAAQkB,aAAeN,EAAIC,GAASb,EAAQmB,aAAeP,EAAIC,KAC7EA,IAAUC,EAAQ,OAAOM,EAAcJ,EAAYT,KACxDA,EAAMc,YAGLD,EAAgB,SAACE,EAAIf,GAEzB,OADAgB,cAAcD,GACVf,EAAMiB,mBAAqBpB,IAAMF,EAAI,EAChCK,EAAMkB,aAEVlB,EAAMC,MAAQJ,IAAMF,EAAI,OAG7BO,YAAW,kBAAMiB,EAAYnB,KAAQA,EAAMoB,WAFlCpB,EAAMkB,cAKXC,EAAc,SAACnB,GACnB,IAAIK,EAAML,EAAMW,YAAclB,EAAQkB,YAAclB,EAAQmB,YAC1DL,EAASF,EAAIG,OACXC,EAAaC,aAAY,WAI3B,GAHAV,EAAMW,YACFlB,EAAQkB,YAAclB,EAAQkB,YAAYU,OAAO,IAAKd,GACtDd,EAAQmB,YAAcP,EAAIgB,OAAO,IAAKd,GAC3B,IAAXA,EAAc,OAAOe,EAAeb,EAAYT,KACnDA,EAAMuB,YAGLD,EAAiB,SAACP,EAAIf,GAC1BgB,cAAcD,KACZlB,EACFC,EAAUF,EAAoBI,IAsBhC,OAVoB,SAACwB,GACnB,IAAIxB,EAlFS,SAAC,GAAD,QACfD,eADe,MACL,CAAC,2BAA4B,cADxB,MAEfe,iBAFe,MAEH,IAFG,MAGfS,iBAHe,MAGH,GAHG,MAIfH,iBAJe,MAIH,IAJG,MAKfhB,kBALe,MAKF,IALE,MAMfqB,kBANe,MAMF,IANE,MAOfd,mBAPe,aAQfe,kBARe,aASfT,yBATe,aAUfC,kBAVe,MAUF,aAVE,MAWfjB,KAXe,MAYV,CACLF,UACAe,YACAS,YACAE,aACAL,YACAT,cACAP,aACAsB,aACAzB,UArBe,SAsBfgB,oBACAC,cA2DcS,CAASH,GAAQ,IACzBzB,EAAUC,EAAMD,QACpBH,EAAqBG,EACrBJ,EAAII,EAAQS,OACW,kBAAZf,IAAsBA,EAAUmC,SAASC,cAAcpC,IAC9DO,EAAM0B,YAfM,SAACjC,EAASO,GAC1B,IAAI8B,EAAaF,SAASG,cAAc,QACxCD,EAAWE,UAAUC,IAAI,iBACzBH,EAAWlB,YAAc,IACzBkB,EAAWlB,YAAcZ,EAAMyB,WAC/BhC,EAAQyC,sBAAsB,WAAYJ,GAUpBK,CAAU1C,EAASO,GACzCF,EAAUC,EAASC,GAGdoC,CAAY1C,K,8GCjGN,MAA0B,gD,eCA1B,MAA0B,0C,OCK1B,SAAS2C,IAEpB,IAAMC,EAAUC,mBAYhB,OAVAC,qBAAU,WACNhD,YAAK8C,EAAQG,QAAS,CAClBf,YAAY,EACZtB,WAAY,IACZU,UAAW,GACXG,mBAAmB,EACnBhB,MAAK,EACLF,QAAS,CAAC,kGAId,qBAAK2C,UAAU,YAAY3B,GAAG,YAAY4B,MAAO,CAC7CC,gBAAgB,OAAD,OAASC,EAAT,KACfC,eAAgB,SAFpB,SAII,sBAAKJ,UAAU,aAAf,UACI,qBAAKA,UAAU,YAAY3B,GAAG,YAA9B,SACI,uBAAOgC,UAAQ,EAACC,OAAK,EAArB,SAAsB,wBAAQC,IAAKC,EAAeC,KAAK,kBAE3D,qBAAKT,UAAU,QAAf,SACI,6BAAI,sBAAMU,IAAKd","file":"static/js/4.3ce02695.chunk.js","sourcesContent":["/**\n * @name setProps\n * @description Set the ityped properties configuration\n * @param {Object} config The configuration properties\n * @return {Promise}\n */\nconst setProps = ({\n  strings = ['Put your strings here...', 'and Enjoy!'],\n  typeSpeed = 100,\n  backSpeed = 50,\n  backDelay = 500,\n  startDelay = 500,\n  cursorChar = '|',\n  placeholder = false,\n  showCursor = true,\n  disableBackTyping = false,\n  onFinished = function () { },\n  loop = true\n}) => ({\n  strings,\n  typeSpeed,\n  backSpeed,\n  cursorChar,\n  backDelay,\n  placeholder,\n  startDelay,\n  showCursor,\n  loop,\n  disableBackTyping,\n  onFinished\n})\n\nexport const init = (element, properties) => {\n  let i = 0, l, STRINGS_TO_ITERATE;\n\n  const typewrite = (strings, props) => {\n    if (i === l)\n      if (props.loop) i = 0;\n    setTimeout(() => { typeString(strings[i], props); }, props.startDelay);\n  }\n\n  const typeString = (str, props) => {\n    let index = 0,\n      strLen = str.length;\n    let intervalID = setInterval(() => {\n      props.placeholder ? element.placeholder += str[index] : element.textContent += str[index];\n      if (++index === strLen) return onStringTyped(intervalID, props);\n    }, props.typeSpeed);\n  }\n\n  const onStringTyped = (id, props) => {\n    clearInterval(id);\n    if (props.disableBackTyping && i === l - 1) {\n      return props.onFinished()\n    }\n    if (!props.loop && i === l - 1) {\n      return props.onFinished();\n    }\n    setTimeout(() => eraseString(props), props.backDelay);\n  }\n\n  const eraseString = (props) => {\n    let str = props.placeholder ? element.placeholder : element.textContent,\n      strLen = str.length;\n    let intervalID = setInterval(() => {\n      props.placeholder\n        ? element.placeholder = element.placeholder.substr(0, --strLen)\n        : element.textContent = str.substr(0, --strLen);\n      if (strLen === 0) return onStringErased(intervalID, props);\n    }, props.backSpeed);\n  }\n\n  const onStringErased = (id, props) => {\n    clearInterval(id);\n    ++i;\n    typewrite(STRINGS_TO_ITERATE, props);\n  }\n\n  const setCursor = (element, props) => {\n    let cursorSpan = document.createElement('span');\n    cursorSpan.classList.add('ityped-cursor');\n    cursorSpan.textContent = '|';\n    cursorSpan.textContent = props.cursorChar;\n    element.insertAdjacentElement('afterend', cursorSpan);\n  }\n\n\n  const startTyping = (prop) => {\n    let props = setProps(prop || {})\n    let strings = props.strings\n    STRINGS_TO_ITERATE = strings\n    l = strings.length\n    if (typeof element === \"string\") element = document.querySelector(element)\n    if (props.showCursor) setCursor(element, props)\n    typewrite(strings, props)\n  }\n\n  return startTyping(properties)\n}","export default __webpack_public_path__ + \"static/media/mappinappbackground.b04fbe76.png\";","export default __webpack_public_path__ + \"static/media/MapPinAppDemo.7ff92e30.mp4\";","import \"./mappinapp.scss\";\nimport mapBackground from \"../../assets/mappinappbackground.png\";\nimport { init } from \"ityped\";\nimport { useEffect, useRef } from \"react\";\nimport MapPinAppDemo from \"../../assets/MapPinAppDemo.mp4\";\nexport default function MappinApp() {\n    //initialize ityped when paged is scrolled to\n    const textRef = useRef();\n\n    useEffect(() => {\n        init(textRef.current, {\n            showCursor: false,\n            startDelay: 200,\n            typeSpeed: 50,\n            disableBackTyping: true,\n            loop:false,\n            strings: [\"Made with Mongoose, Express, React, Node.js, Axios, MapBox, Material-UI, Heroku and love.\"]\n        })\n    })\n    return (\n        <div className=\"mappinapp\" id=\"mappinapp\" style={{\n            backgroundImage: `url(${mapBackground})`,\n            backgroundSize: \"cover\",\n            }}>\n            <div className=\"biggerBoat\">\n                <div className=\"container\" id=\"container\">\n                    <video controls muted><source src={MapPinAppDemo} type=\"video/mp4\"></source></video>\n                </div>\n                <div className=\"right\">\n                    <h2><span ref={textRef}></span></h2>\n                </div>\n            </div>\n        </div>\n    )\n}\n"],"sourceRoot":""}